@using Entities
@using Business

@inject NavigationManager NavManager

<div>
    <EditForm Model="oStorage">
        <div class="form-group">
            <label>Referencia:</label>
            <InputText @bind-Value="oStorage.StorageId" class="form-control" />
        </div>
        <!--No muestro la fecha, pero se guarda con la fecha actual igual
        <div class="form-group">
            <label>Fecha de última actualización:</label>
            <InputDate @bind-Value="oStorage.LastUpdate" class="form-control" />
        </div>-->
        <div class="form-group">
            <label>Cantidad parcial:</label>
            <InputNumber @bind-Value="oStorage.PartialQuantity" class="form-control" />
        </div>
        <div class="form-group">
            <label>Producto:</label>
            <InputSelect @bind-Value="oStorage.ProductId" class="form-control">
                <option value="">Seleccione un producto...</option>
                @foreach (var product in products)
                {
                    <option value="@product.ProductId">@product.ProductName</option>
                }
            </InputSelect>
        </div>
        <div class="form-group">
            <label>Categoria:</label>
            <InputSelect @bind-Value="oStorage.WarehouseId" class="form-control">
                <option value="">Seleccione un depósito...</option>
                @foreach (var warehouse in warehouses)
                {
                    <option value="@warehouse.WarehouseId">@warehouse.WarehouseName</option>
                }
            </InputSelect>
        </div>

        <input type="button" @onclick="SaveStorage" value="Guardar almacenamiento" />

    </EditForm>
</div>


@code {
    StorageEntity oStorage = new StorageEntity();

    List<ProductEntity> products = new List<ProductEntity>();
    List<WarehouseEntity> warehouses = new List<WarehouseEntity>();

    protected override async Task OnInitializedAsync()
    {
        // Inicializo la fecha con el dia de hoy
        oStorage.LastUpdate = DateTime.Today;
        products = B_Product.ProductList();
        warehouses = B_Warehouse.WarehouseList();
    }

    private void SaveStorage()
    {
        B_Storage.CreateStorage(oStorage);

        NavManager.NavigateTo("storage/list");

    }
}
